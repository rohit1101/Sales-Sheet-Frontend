{"version":3,"sources":["services/api.js","Components/DisplaySales/Sale.jsx","Components/DisplaySales/SalesTable.jsx","Components/FilterSales/FilterByCardId.jsx","Components/FilterSales/FilterByDate.jsx","Components/FilterSales/FilterByDateRange.jsx","App.js","index.js","swDev.js"],"names":["updateSalesEntry","id","body","url","URL","fetch","headers","Accept","method","JSON","stringify","then","data","text","res","catch","e","console","log","filterSales","val","startDate","endDate","result","json","Sale","sale","setSalesEntries","salesEntries","useState","editState","setEditState","date","amount_paid","description","editDataState","setEditDataState","income","parseFloat","expense","editIncomeOrExpense","setEditIncomeOrExpense","Date","toLocaleDateString","split","reverse","join","editData","setEditData","removeSalesEntryHandler","deleteSalesEntry","newState","filter","item","handleEditIncomeOrExpense","target","name","checked","className","type","value","onChange","newDate","newAmount","onClick","map","updateSalesEntryHandler","card_id","toLocaleString","style","cursor","SalesTable","sales","length","FilterByCardId","filterData","Boolean","sum","FilterByDate","FilterByDateRange","App","cardId","setCardId","setDate","amount","setAmount","incomeOrExpense","setIncomeOrExpense","setDescription","filterBy","setFilterBy","setFilterData","dateFilter","setDateFilter","handleIncomeOrExpense","handleFilterRequest","filterValue","condition","params","Object","keys","forEach","searchParams","append","getSalesEntries","error","sales_rep_id","addSalesEntry","disabled","values","ReactDOM","render","StrictMode","document","getElementById","swUrl","process","navigator","serviceWorker","register","swDev"],"mappings":"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","file":"static/js/main.847e8671.chunk.js","sourcesContent":["export function getSalesEntries(cardId, date) {\n  let url = new URL(`http://127.0.0.1:3000/sales`);\n  // let url = new URL(`http://54.175.205.131/sales`);\n\n  let params = {\n    cardId,\n    date,\n  };\n\n  Object.keys(params).forEach((val) => {\n    if (params[val]) {\n      url.searchParams.append(val, params[val]);\n    }\n  });\n\n  return fetch(url)\n    .then((data) => data.json())\n    .then((res) => {\n      return res;\n    })\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function addSalesEntry(\n  card_id,\n  sales_rep_id,\n  amount_paid,\n  date = \"\",\n  description\n) {\n  let url = new URL(`http://127.0.0.1:3000/sale`);\n  // let url = new URL(`http://54.175.205.131/sale`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"POST\",\n    body: Boolean(date)\n      ? JSON.stringify({\n          card_id,\n          sales_rep_id,\n          date,\n          amount_paid,\n          description,\n        })\n      : JSON.stringify({ card_id, sales_rep_id, amount_paid, description }),\n  })\n    .then((data) => data.json())\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function updateSalesEntry(id, body) {\n  let url = new URL(`http://127.0.0.1:3000/sales/${id}`);\n  // let url = new URL(`http://54.175.205.131/sales/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"PUT\",\n    body: JSON.stringify(body),\n  })\n    .then((data) => data.text())\n    .then((res) => res)\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function deleteSalesEntry(id) {\n  let url = new URL(`http://127.0.0.1:3000/sales/${id}`);\n  // let url = new URL(`http://54.175.205.131/sales/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"DELETE\",\n  })\n    .then((data) => data.text())\n    .then((res) => res)\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function filterSales(val) {\n  if (typeof val === \"object\") {\n    let url = new URL(\n      `http://127.0.0.1:3000/filter?start=${val.startDate}&end=${val.endDate}`\n    );\n    return fetch(url)\n      .then((result) => result.json())\n      .then((res) => res)\n      .catch((e) => console.log(\"ERROR while filtering sales FE:\", e));\n  } else {\n    let url = new URL(`http://127.0.0.1:3000/filter?by=${val}`);\n    return fetch(url)\n      .then((result) => result.json())\n      .then((res) => res)\n      .catch((e) => console.log(\"ERROR while filtering sales FE:\", e));\n  }\n}\n","import { useState } from \"react\";\nimport { deleteSalesEntry, updateSalesEntry } from \"../../services/api\";\n\nconst Sale = ({ sale, setSalesEntries, salesEntries }) => {\n  const [editState, setEditState] = useState(false);\n  const [editDataState, setEditDataState] = useState({\n    date: false,\n    amount_paid: false,\n    description: false,\n  });\n  const [editIncomeOrExpense, setEditIncomeOrExpense] = useState({\n    income: parseFloat(sale.amount_paid) > 0 ? true : false,\n    expense: parseFloat(sale.amount_paid) < 0 ? true : false,\n  });\n\n  const [editData, setEditData] = useState({\n    date: new Date(sale.date)\n      .toLocaleDateString()\n      .split(\"/\")\n      .reverse()\n      .join(\"-\"),\n    amount_paid: sale.amount_paid,\n    description: sale.description,\n  });\n\n  function updateSalesEntryHandler(id) {\n    const { date, amount_paid, description } = editDataState;\n    const newState = [...salesEntries].map((item) => {\n      if (item.id === id && date && amount_paid && description) {\n        item.date = editData.date;\n        item.amount_paid = editData.amount_paid;\n        item.description = editData.description;\n        updateSalesEntry(id, {\n          date: editData.date,\n          amount_paid: editData.amount_paid,\n          description: editData.description,\n        }).then((result) => console.log(result));\n        console.log(\"FE: inside both\");\n      } else if (item.id === id && date && amount_paid) {\n        item.date = editData.date;\n        item.amount_paid = editData.amount_paid;\n        if (parseFloat(editData.amount_paid) > 0) {\n          item.description = \"NIL\";\n        } else {\n          item.description = editData.description;\n        }\n        updateSalesEntry(id, {\n          date: editData.date,\n          amount_paid: editData.amount_paid,\n          description: item.description,\n        }).then((result) => console.log(result));\n        console.log(\"FE: inside both\");\n      } else if (item.id === id && amount_paid && description) {\n        item.amount_paid = editData.amount_paid;\n        if (parseFloat(editData.amount_paid) > 0) {\n          item.description = \"NIL\";\n        } else {\n          item.description = editData.description;\n        }\n        updateSalesEntry(id, {\n          amount_paid: editData.amount_paid,\n          description: item.description,\n        }).then((result) => console.log(result));\n        console.log(\"FE: inside both\");\n      } else if (item.id === id && date && description) {\n        item.date = editData.date;\n        item.description = editData.description;\n        updateSalesEntry(id, {\n          date: editData.date,\n          description: editData.description,\n        }).then((result) => console.log(result));\n        console.log(\"FE: inside both\");\n      } else if (item.id === id && amount_paid) {\n        item.amount_paid = editData.amount_paid;\n        if (parseFloat(editData.amount_paid) > 0) {\n          item.description = \"NIL\";\n        } else {\n          item.description = editData.description;\n        }\n        updateSalesEntry(id, {\n          amount_paid: editData.amount_paid,\n          description: item.description,\n        }).then((result) => console.log(result));\n        console.log(\"FE: inside amount\");\n      } else if (item.id === id && date) {\n        item.date = editData.date;\n        updateSalesEntry(id, { date: editData.date }).then((result) =>\n          console.log(result)\n        );\n        console.log(\"FE: inside date\");\n      } else if (item.id === id && description) {\n        item.description = editData.description;\n        updateSalesEntry(id, { description: editData.description }).then(\n          (result) => console.log(result)\n        );\n        console.log(\"FE: inside description\");\n      }\n      return item;\n    });\n    console.log(newState);\n    setEditDataState({\n      amount_paid: false,\n      date: false,\n      description: false,\n    });\n    // setEditIncomeOrExpense({\n    //   income: false,\n    //   expense: false,\n    // });\n    setSalesEntries(newState);\n    setEditState(false);\n  }\n\n  function removeSalesEntryHandler(id) {\n    // use the result from promise with snackbar component\n    deleteSalesEntry(id).then((result) => console.log(result));\n    const newState = [...salesEntries].filter((item) => item.id !== id);\n    setSalesEntries(newState);\n  }\n\n  function handleEditIncomeOrExpense(e) {\n    setEditIncomeOrExpense({\n      ...editIncomeOrExpense,\n      [e.target.name]: e.target.checked,\n    });\n  }\n\n  return (\n    <>\n      {editState ? (\n        <>\n          <label className=\"block\">date</label>\n          <input\n            type=\"date\"\n            value={editData.date}\n            onChange={(e) => {\n              setEditDataState({\n                ...editDataState,\n                date: true,\n              });\n              const newDate = e.target.value.split(\"/\").reverse().join(\"-\");\n              setEditData({\n                ...editData,\n                date: newDate,\n              });\n            }}\n          />\n          <div className=\"block my-2\"></div>\n          <label className=\"px-2 \">\n            <input\n              type=\"checkbox\"\n              name=\"income\"\n              checked={editIncomeOrExpense.income}\n              onChange={handleEditIncomeOrExpense}\n            />{\" \"}\n            Income\n          </label>\n          <label className=\"px-2\">\n            <input\n              type=\"checkbox\"\n              name=\"expense\"\n              checked={editIncomeOrExpense.expense}\n              onChange={handleEditIncomeOrExpense}\n            />{\" \"}\n            Expense\n          </label>\n\n          <label className=\"block\">Amount</label>\n          <input\n            type=\"text\"\n            value={editData.amount_paid}\n            onChange={(e) => {\n              setEditDataState({\n                ...editDataState,\n                amount_paid: true,\n              });\n              const newAmount = e.target.value;\n              setEditData({\n                ...editData,\n                amount_paid: newAmount,\n              });\n            }}\n          />\n          {editIncomeOrExpense.expense ? (\n            <>\n              <label className=\"block\">Description</label>\n              <input\n                className=\"block mb-2\"\n                type=\"text\"\n                value={editData.description}\n                onChange={(e) => {\n                  setEditData({ ...editData, description: e.target.value });\n                  setEditDataState({\n                    ...editDataState,\n                    description: true,\n                  });\n                }}\n              />\n            </>\n          ) : null}\n          <button\n            onClick={() => {\n              setEditState(false);\n              setEditDataState({\n                amount_paid: false,\n                date: false,\n                description: false,\n              });\n              setEditIncomeOrExpense({\n                income: false,\n                expense: false,\n              });\n            }}\n            className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={() => {\n              updateSalesEntryHandler(sale.id);\n            }}\n            className={\n              editDataState.date ||\n              editDataState.amount_paid ||\n              editDataState.description\n                ? \"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n                : \"opacity-40 block my-2 min-w-full bg-purple-300 text-purple-600 font-normal rounded-md px-2 py-1 shadow-2xl\"\n            }\n          >\n            Save Changes\n          </button>\n        </>\n      ) : (\n        <tr className=\"bg-yellow-200\">\n          <td className=\"border border-green-600\">{sale.card_id}</td>\n          <td className=\"border border-green-600\">\n            {sale.date\n              ? new Date(sale.date).toLocaleString()\n              : new Date().toLocaleString()}\n          </td>\n          <td className=\"border border-green-600\">{sale.amount_paid}</td>\n          <td\n            onClick={() => removeSalesEntryHandler(sale.id)}\n            style={{ cursor: \"pointer\" }}\n          >\n            &#x2715;\n          </td>\n          <td onClick={() => setEditState(true)} style={{ cursor: \"pointer\" }}>\n            &#x270D;\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nexport default Sale;\n","// import React, { useState } from 'react'\n\nimport Sale from \"./Sale\";\n\nconst SalesTable = ({ sales, setSalesEntries, salesEntries }) => {\n  return (\n    <>\n      {sales && (\n        <table className=\"w-full my-2 table-auto bg-green-200 border-collapse border-2 border-green-800\">\n          <thead>\n            <tr>\n              <th className=\"border border-green-600\">Card ID</th>\n              <th className=\"border border-green-600\">Date</th>\n              <th className=\"border border-green-600\">Amount</th>\n              <th className=\"border border-green-600\">Delete</th>\n              <th className=\"border border-green-600\">Edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sales.length ? (\n              sales.map((sale) => (\n                <Sale\n                  sale={sale}\n                  key={sale.id}\n                  setSalesEntries={setSalesEntries}\n                  salesEntries={salesEntries}\n                />\n              ))\n            ) : (\n              <tr>\n                <td className=\"text-center\">No sales</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nexport default SalesTable;\n","import React from \"react\";\n\nconst FilterByCardId = ({ filterData }) => {\n  return (\n    <>\n      <table className=\"table-auto w-full text-center bg-gray-100\">\n        <thead className=\"bg-gray-300\">\n          <tr>\n            <th>Card Number</th>\n            <th>Total Sales (in Rs.)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Boolean(filterData.length)\n            ? filterData.map((data) => (\n                <tr>\n                  <td>{data.card_id}</td>\n                  <td>{data.sum}</td>\n                </tr>\n              ))\n            : \"loading..\"}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default FilterByCardId;\n","import React from \"react\";\n\nconst FilterByDate = ({ filterData }) => {\n  return (\n    <>\n      <table className=\"table-auto w-full text-center bg-gray-100\">\n        <thead className=\"bg-gray-300\">\n          <tr>\n            <th>Date</th>\n            <th>Total Sales (in Rs.)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Boolean(filterData.length)\n            ? filterData.map((data) => (\n                <tr>\n                  <td>{new Date(data.date).toLocaleDateString()}</td>\n                  <td>$ {data.sum}</td>\n                </tr>\n              ))\n            : \"loading..\"}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default FilterByDate;\n","import React from \"react\";\n\nconst FilterByDateRange = ({ filterData }) => {\n  return (\n    <>\n      <table className=\"table-auto w-full text-center bg-gray-100\">\n        <thead className=\"bg-gray-300\">\n          <tr>\n            <th>Card Number</th>\n            <th>Date</th>\n            <th>Total Sales (in Rs.)</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Boolean(filterData.length)\n            ? filterData.map((data) => (\n                <tr>\n                  <td>{data.card_id}</td>\n                  <td>{new Date(data.date).toLocaleDateString()}</td>\n                  <td>{data.amount_paid}</td>\n                  <td>{data.description}</td>\n                </tr>\n              ))\n            : \"loading..\"}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default FilterByDateRange;\n","import React, { useState } from \"react\";\nimport SalesTable from \"./Components/DisplaySales/SalesTable\";\nimport FilterByCardId from \"./Components/FilterSales/FilterByCardId\";\nimport FilterByDate from \"./Components/FilterSales/FilterByDate\";\nimport FilterByDateRange from \"./Components/FilterSales/FilterByDateRange\";\nimport { getSalesEntries, addSalesEntry, filterSales } from \"./services/api\";\n\nfunction App() {\n  const [salesEntries, setSalesEntries] = useState([]);\n  const [cardId, setCardId] = useState();\n  const [date, setDate] = useState();\n  const [amount, setAmount] = useState();\n  const [incomeOrExpense, setIncomeOrExpense] = useState({\n    income: false,\n    expense: false,\n  });\n  const [description, setDescription] = useState(\"\");\n  const [filterBy, setFilterBy] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [dateFilter, setDateFilter] = useState({\n    startDate: \"\",\n    endDate: \"\",\n  });\n  const salesRepId = 1;\n\n  function getSalesEntriesHandler() {\n    getSalesEntries(cardId, date)\n      .then((res) => setSalesEntries(res))\n      .catch((error) => console.log(\"From App.js METHOD = GET: \", error));\n\n    setCardId(\"\");\n    setDate(\"\");\n    setIncomeOrExpense({\n      income: false,\n      expense: false,\n    });\n  }\n\n  function addSalesEntryHandler() {\n    addSalesEntry(\n      cardId,\n      salesRepId,\n      incomeOrExpense.income ? amount : `-${amount}`,\n      date,\n      description ? description : \"NIL\"\n    )\n      .then((res) => {\n        console.log(res);\n        setSalesEntries([...salesEntries, res]);\n      })\n      .catch((error) => console.log(\"From App.js METHOD = POST\", error));\n    setCardId(\"\");\n    setDate(\"\");\n    setAmount(\"\");\n    setIncomeOrExpense({\n      income: false,\n      expense: false,\n    });\n    setDescription(\"\");\n  }\n\n  function handleIncomeOrExpense(e) {\n    setIncomeOrExpense({\n      ...incomeOrExpense,\n      [e.target.name]: e.target.checked,\n    });\n  }\n\n  function handleFilterRequest(filterValue) {\n    if (typeof filterValue === \"object\") {\n      filterSales(filterValue)\n        .then((res) => setFilterData(res))\n        .catch((e) => console.log(\"Error e\", e));\n    } else {\n      filterSales(filterValue)\n        .then((res) => setFilterData(res))\n        .catch((e) => console.log(\"Error e\", e));\n    }\n  }\n\n  function handleFilterChange(e) {\n    if (e.target.value === \"date\" || e.target.value === \"card_id\") {\n      setFilterBy(e.target.value);\n      handleFilterRequest(e.target.value);\n    } else if (e.target.value === \"date_range\") {\n      setFilterBy(e.target.value);\n    } else if (e.target.value === \"Choose Filter\") {\n      setFilterBy(e.target.value);\n    }\n  }\n\n  let condition = incomeOrExpense.income\n    ? cardId && salesRepId && amount && incomeOrExpense.income\n    : cardId && salesRepId && amount && incomeOrExpense.expense && description;\n\n  return (\n    <div className=\"h-full bg-blue-100\">\n      <div className=\"w-full max-w-screen-md mx-auto rounded-sm shadow-xl h-full\">\n        <h1 className=\"font-sans text-2xl font-medium text-gray-500 text-center\">\n          Sales Summary\n        </h1>\n\n        <label className=\"block\">Card Id</label>\n        <input\n          type=\"text\"\n          value={cardId}\n          onChange={(e) => setCardId(e.target.value)}\n        />\n        <label className=\"block\">Date</label>\n        <input\n          className=\"block mb-2\"\n          type=\"date\"\n          value={date}\n          onChange={(e) =>\n            setDate(e.target.value.split(\"/\").reverse().join(\"-\"))\n          }\n        />\n        <label className=\"px-2\">\n          <input\n            type=\"checkbox\"\n            name=\"income\"\n            checked={incomeOrExpense.income}\n            onChange={handleIncomeOrExpense}\n          />{\" \"}\n          Income\n        </label>\n        <label className=\"px-2\">\n          <input\n            type=\"checkbox\"\n            name=\"expense\"\n            checked={incomeOrExpense.expense}\n            onChange={handleIncomeOrExpense}\n          />{\" \"}\n          Expense\n        </label>\n\n        <label className=\"block\">Amount</label>\n        <input\n          className=\"block mb-2\"\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        {incomeOrExpense.expense ? (\n          <>\n            <label className=\"block\">Description</label>\n            <input\n              className=\"block mb-2\"\n              type=\"text\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </>\n        ) : null}\n\n        <button\n          onClick={getSalesEntriesHandler}\n          className=\"min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n        >\n          {cardId || date ? \"Get Sales Summary\" : \"Get All Sales Summary\"}\n        </button>\n\n        <button\n          onClick={addSalesEntryHandler}\n          disabled={condition ? false : true}\n          className={\n            condition\n              ? \"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n              : \"cursor-not-allowed opacity-40 block my-2 min-w-full bg-purple-300 text-purple-600 font-normal rounded-md px-2 py-1 shadow-2xl\"\n          }\n        >\n          Add Sales Entry\n        </button>\n        <label className=\"block\">\n          <span className=\"block\">Filter Sales</span>\n          <select value={filterBy} onChange={handleFilterChange}>\n            <option value=\"Choose Filter\" name=\"Choose Filter\">\n              Choose Filter\n            </option>\n            <option value=\"date\">Filter by day</option>\n            <option value=\"card_id\">Filter by card ID</option>\n            <option value=\"date_range\">Filter by date range</option>\n          </select>\n        </label>\n        {filterBy === \"date_range\" ? (\n          <>\n            <label className=\"block\">Start Date</label>\n            <input\n              className=\"block mb-2\"\n              type=\"date\"\n              value={date}\n              name=\"startDate\"\n              onChange={(e) =>\n                setDateFilter({\n                  ...dateFilter,\n                  [e.target.name]: e.target.value,\n                })\n              }\n            />\n            <label className=\"block\">End Date</label>\n            <input\n              className=\"block mb-2\"\n              type=\"date\"\n              value={date}\n              name=\"endDate\"\n              onChange={(e) =>\n                setDateFilter({\n                  ...dateFilter,\n                  [e.target.name]: e.target.value,\n                })\n              }\n            />\n            <button\n              className=\"block p-2 bg-yellow-100 text-yellow-600  rounded-md px-2 py-1 shadow-2xl\"\n              onClick={() => {\n                if (Object.values(dateFilter).length === 2) {\n                  handleFilterRequest(dateFilter);\n                  setDateFilter({\n                    startDate: \"\",\n                    endDate: \"\",\n                  });\n                }\n              }}\n            >\n              Submit\n            </button>\n          </>\n        ) : null}\n\n        {filterBy === \"date\" ? <FilterByDate filterData={filterData} /> : null}\n        {filterBy === \"card_id\" ? (\n          <FilterByCardId filterData={filterData} />\n        ) : null}\n        {filterBy === \"date_range\" && Object.values(dateFilter).length === 2 ? (\n          <FilterByDateRange filterData={filterData} />\n        ) : null}\n        <SalesTable\n          sales={salesEntries}\n          salesEntries={salesEntries}\n          setSalesEntries={setSalesEntries}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport swDev from \"./swDev\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nswDev();\n","export default function swDev() {\n  let swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((res) => console.log(\"sw response\"));\n}\n"],"sourceRoot":""}