{"version":3,"sources":["Components/DisplaySales/Sale.jsx","services/api.js","Components/DisplaySales/SalesTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sale","sale","setSalesEntries","salesEntries","useState","card_id","editSale","setEditSale","editState","setEditState","updateSalesEntryHandler","id","url","URL","fetch","headers","Accept","method","body","JSON","stringify","then","data","text","res","catch","e","console","log","updateSalesEntry","result","newState","map","item","removeSalesEntryHandler","deleteSalesEntry","filter","className","type","value","onChange","target","date","amount_paid","onClick","sales_rep_id","Date","toLocaleString","style","cursor","SalesTable","sales","length","App","cardId","setCardId","setDate","amount","setAmount","split","reverse","join","params","Object","keys","forEach","val","searchParams","append","json","getSalesEntries","error","Boolean","addSalesEntry","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f41af56.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { deleteSalesEntry, updateSalesEntry } from \"../../services/api\";\n\nconst Sale = ({ sale, setSalesEntries, salesEntries }) => {\n  const [editSale, setEditSale] = useState(sale.card_id);\n  const [editState, setEditState] = useState(false);\n\n  function updateSalesEntryHandler(id) {\n    updateSalesEntry(id, editSale).then((result) => console.log(result));\n    const newState = [...salesEntries].map((item) => {\n      if (item.id === id) {\n        item.card_id = editSale;\n      }\n      return item;\n    });\n    console.log(newState);\n    setSalesEntries(newState);\n    setEditState(false);\n  }\n\n  function removeSalesEntryHandler(id) {\n    // use the result from promise with snackbar component\n    deleteSalesEntry(id).then((result) => console.log(result));\n    const newState = [...salesEntries].filter((item) => item.id !== id);\n    setSalesEntries(newState);\n  }\n\n  return (\n    <>\n      {editState ? (\n        <>\n          <label className=\"block\">Card Id</label>\n          <input\n            type=\"text\"\n            value={editSale}\n            onChange={(e) => {\n              setEditSale(e.target.value);\n            }}\n          />\n          <label className=\"block\">date</label>\n          <input type=\"date\" value={sale.date} />\n          <label className=\"block\">Amount</label>\n          <input type=\"text\" value={sale.amount_paid} />\n          <button\n            onClick={() => {\n              setEditState(false);\n              setEditSale(sale.card_id);\n            }}\n            className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={() => {\n              updateSalesEntryHandler(sale.id);\n            }}\n            className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n          >\n            Save Changes\n          </button>\n        </>\n      ) : (\n        <tr className=\"bg-yellow-200\">\n          <td className=\"border border-green-600\">{sale.card_id}</td>\n          <td className=\"border border-green-600\">{sale.sales_rep_id}</td>\n          <td className=\"border border-green-600\">\n            {sale.date\n              ? new Date(sale.date).toLocaleString()\n              : new Date().toLocaleString()}\n          </td>\n          <td className=\"border border-green-600\">{sale.amount_paid}</td>\n          <td\n            onClick={() => removeSalesEntryHandler(sale.id)}\n            style={{ cursor: \"pointer\" }}\n          >\n            &#x2715;\n          </td>\n          <td onClick={() => setEditState(true)} style={{ cursor: \"pointer\" }}>\n            &#x270D;\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nexport default Sale;\n\n{\n  /* <tr className=\"bg-yellow-200\">\n      <td className=\"border border-green-600\">{sale.card_id}</td>\n      <td className=\"border border-green-600\">{sale.sales_rep_id}</td>\n      <td className=\"border border-green-600\">\n        {sale.date\n          ? new Date(sale.date).toLocaleString()\n          : new Date().toLocaleString()}\n      </td>\n      <td className=\"border border-green-600\">{sale.amount_paid}</td>\n      <td\n        onClick={() => removeSalesEntryHandler(sale.id)}\n        style={{ cursor: \"pointer\" }}\n      >\n        &#x2715;\n      </td>\n      <td onClick={updateSalesEntryHandler} style={{ cursor: \"pointer\" }}>\n        &#x270D;\n      </td>\n    </tr> */\n}\n","export function getSalesEntries(cardId, date) {\n  // let url = new URL(`http://127.0.0.1:3000/sales`);\n  let url = new URL(`http://54.175.205.131/sales`);\n\n  let params = {\n    cardId,\n    date,\n  };\n\n  Object.keys(params).forEach((val) => {\n    if (params[val]) {\n      url.searchParams.append(val, params[val]);\n    }\n  });\n\n  return fetch(url)\n    .then((data) => data.json())\n    .then((res) => {\n      return res;\n    })\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function addSalesEntry(card_id, sales_rep_id, amount_paid, date = \"\") {\n  // let url = new URL(`http://127.0.0.1:3000/sale`);\n  let url = new URL(`http://54.175.205.131/sale`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"POST\",\n    body: Boolean(date)\n      ? JSON.stringify({ card_id, sales_rep_id, date, amount_paid })\n      : JSON.stringify({ card_id, sales_rep_id, amount_paid }),\n  })\n    .then((data) => data.json())\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function updateSalesEntry(id, card_id) {\n  // let url = new URL(`http://127.0.0.1:3000/sales/${id}`);\n  let url = new URL(`http://54.175.205.131/sales/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"PUT\",\n    body: JSON.stringify({ card_id }),\n  })\n    .then((data) => data.text())\n    .then((res) => res)\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function deleteSalesEntry(id) {\n  // let url = new URL(`http://127.0.0.1:3000/sales/${id}`);\n  let url = new URL(`http://54.175.205.131/sales/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"DELETE\",\n  })\n    .then((data) => data.text())\n    .then((res) => res)\n    .catch((e) => console.log(\"Error:\", e));\n}\n","// import React, { useState } from 'react'\n\nimport Sale from \"./Sale\";\n\nconst SalesTable = ({ sales, setSalesEntries, salesEntries }) => {\n  return (\n    <>\n      {sales && (\n        <table className=\"w-full my-2 table-auto bg-green-200 border-collapse border-2 border-green-800\">\n          <thead>\n            <tr>\n              <th className=\"border border-green-600\">Card ID</th>\n              <th className=\"border border-green-600\">Sales Rep ID</th>\n              <th className=\"border border-green-600\">Date</th>\n              <th className=\"border border-green-600\">Amount</th>\n              <th className=\"border border-green-600\">Delete</th>\n              <th className=\"border border-green-600\">Edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sales.length ? (\n              sales.map((sale) => (\n                <Sale\n                  sale={sale}\n                  key={sale.id}\n                  setSalesEntries={setSalesEntries}\n                  salesEntries={salesEntries}\n                />\n              ))\n            ) : (\n              <tr>\n                <td className=\"text-center\">No sales</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nexport default SalesTable;\n","import React, { useState } from \"react\";\nimport SalesTable from \"./Components/DisplaySales/SalesTable\";\nimport { getSalesEntries, addSalesEntry } from \"./services/api\";\n\nfunction App() {\n  const [salesEntries, setSalesEntries] = useState([]);\n  const [cardId, setCardId] = useState();\n  const [date, setDate] = useState();\n  const [amount, setAmount] = useState();\n  const salesRepId = 1;\n\n  function getSalesEntriesHandler() {\n    getSalesEntries(cardId, date)\n      .then((res) => setSalesEntries(res))\n      .catch((error) => console.log(\"From App.js METHOD = GET: \", error));\n\n    setCardId(\"\");\n    setDate(\"\");\n  }\n\n  function addSalesEntryHandler() {\n    addSalesEntry(cardId, salesRepId, amount, date)\n      .then((res) => {\n        setSalesEntries([...salesEntries, res]);\n      })\n      .catch((error) => console.log(\"From App.js METHOD = POST\", error));\n    setCardId(\"\");\n    setDate(\"\");\n    setAmount(\"\");\n  }\n\n  return (\n    <div className=\"h-screen bg-blue-100\">\n      <div className=\"w-full max-w-screen-md mx-auto rounded-sm shadow-xl h-full\">\n        <h1 className=\"font-sans text-2xl font-medium text-gray-500 text-center\">\n          Sales Summary\n        </h1>\n\n        <label className=\"block\">Card Id</label>\n        <input\n          type=\"text\"\n          value={cardId}\n          onChange={(e) => setCardId(e.target.value)}\n        />\n        <label className=\"block\">Date</label>\n        <input\n          className=\"block mb-2\"\n          type=\"date\"\n          value={date}\n          onChange={(e) =>\n            setDate(e.target.value.split(\"/\").reverse().join(\"-\"))\n          }\n        />\n        <label className=\"block\">Amount</label>\n        <input\n          className=\"block mb-2\"\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        <button\n          onClick={getSalesEntriesHandler}\n          className=\"min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n        >\n          {cardId || date ? \"Get Sales Summary\" : \"Get All Sales Summary\"}\n        </button>\n        {cardId && salesRepId && amount ? (\n          <button\n            onClick={addSalesEntryHandler}\n            className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n          >\n            Add Sales Entry\n          </button>\n        ) : (\n          <button\n            disabled={true}\n            style={{ cursor: \"not-allowed\" }}\n            className=\"opacity-40 block my-2 min-w-full bg-purple-300 text-purple-600 font-normal rounded-md px-2 py-1 shadow-2xl\"\n          >\n            Add Sales Entry\n          </button>\n        )}\n        <SalesTable\n          sales={salesEntries}\n          salesEntries={salesEntries}\n          setSalesEntries={setSalesEntries}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}