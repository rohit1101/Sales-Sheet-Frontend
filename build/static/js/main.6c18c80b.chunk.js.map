{"version":3,"sources":["services/api.js","Components/DisplaySales/Sale.jsx","Components/DisplaySales/SalesTable.jsx","App.js","index.js","swDev.js"],"names":["updateSalesEntry","id","body","url","URL","fetch","headers","Accept","method","JSON","stringify","then","data","text","res","catch","e","console","log","Sale","sale","setSalesEntries","salesEntries","useState","editState","setEditState","date","amount_paid","editDataState","setEditDataState","Date","toLocaleDateString","split","reverse","join","editData","setEditData","removeSalesEntryHandler","deleteSalesEntry","result","newState","filter","item","className","type","value","onChange","newDate","target","newAmount","onClick","map","updateSalesEntryHandler","card_id","sales_rep_id","toLocaleString","style","cursor","SalesTable","sales","length","App","cardId","setCardId","setDate","amount","setAmount","params","Object","keys","forEach","val","searchParams","append","json","getSalesEntries","error","Boolean","addSalesEntry","ReactDOM","render","StrictMode","document","getElementById","swUrl","process","navigator","serviceWorker","register","swDev"],"mappings":"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","file":"static/js/main.6c18c80b.chunk.js","sourcesContent":["export function getSalesEntries(cardId, date) {\n  // let url = new URL(`http://127.0.0.1:3000/sales`);\n  let url = new URL(`http://54.175.205.131/sales`);\n\n  let params = {\n    cardId,\n    date,\n  };\n\n  Object.keys(params).forEach((val) => {\n    if (params[val]) {\n      url.searchParams.append(val, params[val]);\n    }\n  });\n\n  return fetch(url)\n    .then((data) => data.json())\n    .then((res) => {\n      return res;\n    })\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function addSalesEntry(card_id, sales_rep_id, amount_paid, date = \"\") {\n  // let url = new URL(`http://127.0.0.1:3000/sale`);\n  let url = new URL(`http://54.175.205.131/sale`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"POST\",\n    body: Boolean(date)\n      ? JSON.stringify({ card_id, sales_rep_id, date, amount_paid })\n      : JSON.stringify({ card_id, sales_rep_id, amount_paid }),\n  })\n    .then((data) => data.json())\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function updateSalesEntry(id, body) {\n  // let url = new URL(`http://127.0.0.1:3000/sales/${id}`);\n  let url = new URL(`http://54.175.205.131/sales/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"PUT\",\n    body: JSON.stringify(body),\n  })\n    .then((data) => data.text())\n    .then((res) => res)\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function deleteSalesEntry(id) {\n  // let url = new URL(`http://127.0.0.1:3000/sales/${id}`);\n  let url = new URL(`http://54.175.205.131/sales/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"DELETE\",\n  })\n    .then((data) => data.text())\n    .then((res) => res)\n    .catch((e) => console.log(\"Error:\", e));\n}\n","import { useState } from \"react\";\nimport { deleteSalesEntry, updateSalesEntry } from \"../../services/api\";\n\nconst Sale = ({ sale, setSalesEntries, salesEntries }) => {\n  const [editState, setEditState] = useState(false);\n  const [editDataState, setEditDataState] = useState({\n    date: false,\n    amount_paid: false,\n  });\n  const [editData, setEditData] = useState({\n    date: new Date(sale.date)\n      .toLocaleDateString()\n      .split(\"/\")\n      .reverse()\n      .join(\"-\"),\n    amount_paid: sale.amount_paid,\n  });\n\n  function updateSalesEntryHandler(id) {\n    const newState = [...salesEntries].map((item) => {\n      if (item.id === id && editDataState.date && editDataState.amount_paid) {\n        item.date = editData.date;\n        item.amount_paid = editData.amount_paid;\n        updateSalesEntry(id, {\n          date: editData.date,\n          amount_paid: editData.amount_paid,\n        }).then((result) => console.log(result));\n        console.log(\"FE: inside both\");\n      } else if (item.id === id && editDataState.amount_paid) {\n        item.amount_paid = editData.amount_paid;\n        updateSalesEntry(id, { amount_paid: editData.amount_paid }).then(\n          (result) => console.log(result)\n        );\n        console.log(\"FE: inside amount\");\n      } else if (item.id === id && editDataState.date) {\n        item.date = editData.date;\n        updateSalesEntry(id, { date: editData.date }).then((result) =>\n          console.log(result)\n        );\n        console.log(\"FE: inside date\");\n      }\n      return item;\n    });\n    console.log(newState);\n    setEditDataState({\n      amount_paid: false,\n      date: false,\n    });\n    setSalesEntries(newState);\n    setEditState(false);\n  }\n\n  function removeSalesEntryHandler(id) {\n    // use the result from promise with snackbar component\n    deleteSalesEntry(id).then((result) => console.log(result));\n    const newState = [...salesEntries].filter((item) => item.id !== id);\n    setSalesEntries(newState);\n  }\n\n  return (\n    <>\n      {editState ? (\n        <>\n          <label className=\"block\">date</label>\n          <input\n            type=\"date\"\n            value={editData.date}\n            onChange={(e) => {\n              setEditDataState({\n                ...editDataState,\n                date: true,\n              });\n              const newDate = e.target.value.split(\"/\").reverse().join(\"-\");\n              setEditData({\n                ...editData,\n                date: newDate,\n              });\n            }}\n          />\n          <label className=\"block\">Amount</label>\n          <input\n            type=\"text\"\n            value={editData.amount_paid}\n            onChange={(e) => {\n              setEditDataState({\n                ...editDataState,\n                amount_paid: true,\n              });\n              const newAmount = e.target.value;\n              setEditData({\n                ...editData,\n                amount_paid: newAmount,\n              });\n            }}\n          />\n          <button\n            onClick={() => {\n              setEditState(false);\n              setEditDataState({\n                amount_paid: false,\n                date: false,\n              });\n            }}\n            className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={() => {\n              updateSalesEntryHandler(sale.id);\n            }}\n            className={\n              editDataState.date || editDataState.amount_paid\n                ? \"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n                : \"opacity-40 block my-2 min-w-full bg-purple-300 text-purple-600 font-normal rounded-md px-2 py-1 shadow-2xl\"\n            }\n          >\n            Save Changes\n          </button>\n        </>\n      ) : (\n        <tr className=\"bg-yellow-200\">\n          <td className=\"border border-green-600\">{sale.card_id}</td>\n          <td className=\"border border-green-600\">{sale.sales_rep_id}</td>\n          <td className=\"border border-green-600\">\n            {sale.date\n              ? new Date(sale.date).toLocaleString()\n              : new Date().toLocaleString()}\n          </td>\n          <td className=\"border border-green-600\">{sale.amount_paid}</td>\n          <td\n            onClick={() => removeSalesEntryHandler(sale.id)}\n            style={{ cursor: \"pointer\" }}\n          >\n            &#x2715;\n          </td>\n          <td onClick={() => setEditState(true)} style={{ cursor: \"pointer\" }}>\n            &#x270D;\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nexport default Sale;\n","// import React, { useState } from 'react'\n\nimport Sale from \"./Sale\";\n\nconst SalesTable = ({ sales, setSalesEntries, salesEntries }) => {\n  return (\n    <>\n      {sales && (\n        <table className=\"w-full my-2 table-auto bg-green-200 border-collapse border-2 border-green-800\">\n          <thead>\n            <tr>\n              <th className=\"border border-green-600\">Card ID</th>\n              <th className=\"border border-green-600\">Sales Rep ID</th>\n              <th className=\"border border-green-600\">Date</th>\n              <th className=\"border border-green-600\">Amount</th>\n              <th className=\"border border-green-600\">Delete</th>\n              <th className=\"border border-green-600\">Edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sales.length ? (\n              sales.map((sale) => (\n                <Sale\n                  sale={sale}\n                  key={sale.id}\n                  setSalesEntries={setSalesEntries}\n                  salesEntries={salesEntries}\n                />\n              ))\n            ) : (\n              <tr>\n                <td className=\"text-center\">No sales</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nexport default SalesTable;\n","import React, { useState } from \"react\";\nimport SalesTable from \"./Components/DisplaySales/SalesTable\";\nimport { getSalesEntries, addSalesEntry } from \"./services/api\";\n\nfunction App() {\n  const [salesEntries, setSalesEntries] = useState([]);\n  const [cardId, setCardId] = useState();\n  const [date, setDate] = useState();\n  const [amount, setAmount] = useState();\n  const salesRepId = 1;\n\n  function getSalesEntriesHandler() {\n    getSalesEntries(cardId, date)\n      .then((res) => setSalesEntries(res))\n      .catch((error) => console.log(\"From App.js METHOD = GET: \", error));\n\n    setCardId(\"\");\n    setDate(\"\");\n  }\n\n  function addSalesEntryHandler() {\n    addSalesEntry(cardId, salesRepId, amount, date)\n      .then((res) => {\n        console.log(res);\n        setSalesEntries([...salesEntries, res]);\n      })\n      .catch((error) => console.log(\"From App.js METHOD = POST\", error));\n    setCardId(\"\");\n    setDate(\"\");\n    setAmount(\"\");\n  }\n\n  return (\n    <div className=\"h-screen bg-blue-100\">\n      <div className=\"w-full max-w-screen-md mx-auto rounded-sm shadow-xl h-full\">\n        <h1 className=\"font-sans text-2xl font-medium text-gray-500 text-center\">\n          Sales Summary\n        </h1>\n\n        <label className=\"block\">Card Id</label>\n        <input\n          type=\"text\"\n          value={cardId}\n          onChange={(e) => setCardId(e.target.value)}\n        />\n        <label className=\"block\">Date</label>\n        <input\n          className=\"block mb-2\"\n          type=\"date\"\n          value={date}\n          onChange={(e) =>\n            setDate(e.target.value.split(\"/\").reverse().join(\"-\"))\n          }\n        />\n        <label className=\"block\">Amount</label>\n        <input\n          className=\"block mb-2\"\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        <button\n          onClick={getSalesEntriesHandler}\n          className=\"min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n        >\n          {cardId || date ? \"Get Sales Summary\" : \"Get All Sales Summary\"}\n        </button>\n\n        <button\n          onClick={addSalesEntryHandler}\n          className={\n            cardId && salesRepId && amount\n              ? \"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n              : \"opacity-40 block my-2 min-w-full bg-purple-300 text-purple-600 font-normal rounded-md px-2 py-1 shadow-2xl\"\n          }\n        >\n          Add Sales Entry\n        </button>\n\n        <SalesTable\n          sales={salesEntries}\n          salesEntries={salesEntries}\n          setSalesEntries={setSalesEntries}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport swDev from \"./swDev\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nswDev();\n","export default function swDev() {\n  let swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((res) => console.log(\"sw response\"));\n}\n"],"sourceRoot":""}