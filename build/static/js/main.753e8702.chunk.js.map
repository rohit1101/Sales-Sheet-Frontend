{"version":3,"sources":["constants.js","services/api.js","Components/Icons.jsx","Components/DisplaySales/Sale.jsx","Components/DisplaySales/SalesTable.jsx","Layout.jsx","App.js","pages/AddSalesEntry.jsx","pages/EditSalesEntry.jsx","pages/Login.jsx","pages/SignUp.jsx","PrivateRoute.js","Route.jsx","index.js"],"names":["baseURL","a","username","password","url","URL","fetch","method","headers","Accept","body","JSON","stringify","res","json","console","log","getAllIncomeEntries","cardId","date","params","card_id","Object","keys","forEach","val","searchParams","append","Authorization","parse","localStorage","getItem","then","data","catch","e","getAllExpensesEntries","Icons","type","xmlns","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Sale","sale","tabState","incomeEntries","setIncomeEntries","expenseEntries","setExpenseEntries","history","useHistory","removeSalesEntryHandler","id","income","text","deleteIncomeEntry","result","newState","filter","item","expense","deleteExpenseEntry","format","Date","toLocaleDateString","description","amount_paid","onClick","push","SalesTable","length","map","Layout","children","App","useState","setTabState","useEffect","error","removeItem","AddSalesEntry","useForm","mode","register","handleSubmit","reset","watch","control","errors","formState","saleDate","onSubmit","formattedDate","formData","location","pathname","sales_rep_id","Boolean","addExpenseEntry","addIncomeEntry","required","valueAsNumber","validate","positiveNumber","value","parseFloat","style","color","message","name","defaultValue","render","field","placeholderText","onChange","selected","dateFormat","trim","EditSalesEntry","getIncomeById","getExpenseById","useParams","updateIncomeEntry","alert","updateExpenseEntry","Login","login","setItem","token","SignUp","PrivateRoute","rest","to","Routes","exact","path","ReactDOM","StrictMode","Route","document","getElementById"],"mappings":"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","file":"static/js/main.753e8702.chunk.js","sourcesContent":["// export const baseURL = \"http://3.88.239.148:80\";\nexport const baseURL = \"http://127.0.0.1:5000\";\n","import { baseURL } from \"../constants\";\n\nexport async function login({ username, password }) {\n  let url = new URL(`${baseURL}/login`);\n\n  try {\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    return await res.json();\n  } catch (error) {\n    console.log(\"Error:\", error);\n  }\n}\n\nexport async function register({ username, password }) {\n  let url = new URL(`${baseURL}/register`);\n\n  try {\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    await res.json();\n  } catch (error) {\n    console.log(\"Error:\", error);\n  }\n}\n\nexport function getIncomeById(id) {\n  // let url = new URL(`http://107.22.18.203/sales`);\n  let url = new URL(`${baseURL}/incomes/income/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n  })\n    .then((data) => data.json())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function getExpenseById(id) {\n  // let url = new URL(`http://107.22.18.203/sales`);\n  let url = new URL(`${baseURL}/expenses/expense/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n  })\n    .then((data) => data.json())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function getAllIncomeEntries(cardId, date) {\n  // let url = new URL(`http://107.22.18.203/sales`);\n  let url = new URL(`${baseURL}/income`);\n\n  let params = {\n    card_id: cardId,\n    date,\n  };\n\n  Object.keys(params).forEach((val) => {\n    if (params[val]) {\n      url.searchParams.append(val, params[val]);\n    }\n  });\n\n  return fetch(url, {\n    headers: {\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n  })\n    .then((data) => data.json())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function addIncomeEntry(\n  card_id,\n  sales_rep_id,\n  amount_paid,\n  date = \"\",\n  description\n) {\n  // let url = new URL(`http://107.22.18.203/sale`);\n  let url = new URL(`${baseURL}/income`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n    method: \"POST\",\n    body: Boolean(date)\n      ? JSON.stringify({\n          card_id,\n          sales_rep_id,\n          date,\n          amount_paid,\n          description,\n        })\n      : JSON.stringify({ card_id, sales_rep_id, amount_paid, description }),\n  })\n    .then((data) => data.json())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function updateIncomeEntry(id, body) {\n  // let url = new URL(`http://107.22.18.203/sales/${id}`);\n  let url = new URL(`${baseURL}/income/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n    method: \"PUT\",\n    body: JSON.stringify(body),\n  })\n    .then((data) => data.text())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function deleteIncomeEntry(id) {\n  // let url = new URL(`http://107.22.18.203/sales/${id}`);\n  let url = new URL(`${baseURL}/income/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n    method: \"DELETE\",\n  })\n    .then((data) => data.text())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function filterSales(val) {\n  if (typeof val === \"object\") {\n    let url = new URL(\n      `${baseURL}/filter?start=${val.startDate}&end=${val.endDate}`\n    );\n    return fetch(url, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n      },\n    })\n      .then((result) => result.json())\n      .then((res) => res)\n      .catch((e) => console.log(\"ERROR while filtering sales FE:\", e));\n  } else {\n    let url = new URL(`${baseURL}/filter?by=${val}`);\n    return fetch(url)\n      .then((result) => result.json())\n      .then((res) => res)\n      .catch((e) => console.log(\"ERROR while filtering sales FE:\", e));\n  }\n}\n\nexport function getAllExpensesEntries(cardId, date) {\n  // let url = new URL(`http://107.22.18.203/sales`);\n  let url = new URL(`${baseURL}/expense`);\n\n  let params = {\n    cardId,\n    date,\n  };\n\n  Object.keys(params).forEach((val) => {\n    if (params[val]) {\n      url.searchParams.append(val, params[val]);\n    }\n  });\n\n  return fetch(url, {\n    headers: {\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n  })\n    .then((data) => data.json())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function addExpenseEntry(\n  sales_rep_id,\n  amount_paid,\n  date = \"\",\n  description\n) {\n  // let url = new URL(`http://107.22.18.203/sale`);\n  let url = new URL(`${baseURL}/expense`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n    method: \"POST\",\n    body: Boolean(date)\n      ? JSON.stringify({\n          sales_rep_id,\n          date,\n          amount_paid,\n          description,\n        })\n      : JSON.stringify({ sales_rep_id, amount_paid, description }),\n  })\n    .then((data) => data.json())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function updateExpenseEntry(id, body) {\n  // let url = new URL(`http://107.22.18.203/sales/${id}`);\n  let url = new URL(`${baseURL}/expenses/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n    method: \"PUT\",\n    body: JSON.stringify(body),\n  })\n    .then((data) => data.text())\n    .catch((e) => console.log(\"Error:\", e));\n}\n\nexport function deleteExpenseEntry(id) {\n  // let url = new URL(`http://107.22.18.203/sales/${id}`);\n  let url = new URL(`${baseURL}/expenses/${id}`);\n\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"jwt\"))}`,\n    },\n    method: \"DELETE\",\n  })\n    .then((data) => data.text())\n    .catch((e) => console.log(\"Error:\", e));\n}\n","const Icons = ({ type }) => {\n  return (\n    <>\n      {type === \"delete\" ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"cursor-pointer block h-6 w-6 mx-auto stroke-current text-red-500\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n          />\n        </svg>\n      ) : (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"cursor-pointer block h-6 w-6 mx-auto stroke-current text-purple-500\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n          />\n        </svg>\n      )}\n    </>\n  );\n};\n\nexport default Icons;\n","import { format, formatISO } from \"date-fns\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteExpenseEntry, deleteIncomeEntry } from \"../../services/api\";\nimport Icons from \"../Icons\";\n\nconst Sale = ({\n  sale,\n  tabState,\n  incomeEntries,\n  setIncomeEntries,\n  expenseEntries,\n  setExpenseEntries,\n}) => {\n  const history = useHistory();\n\n  function removeSalesEntryHandler(id) {\n    // use the result from promise with snackbar component\n    if (tabState.income) {\n      deleteIncomeEntry(id).then((result) => console.log(result));\n      const newState = [...incomeEntries].filter((item) => item.id !== id);\n      setIncomeEntries(newState);\n    }\n    if (tabState.expense) {\n      deleteExpenseEntry(id).then((result) => console.log(result));\n      const newState = [...expenseEntries].filter((item) => item.id !== id);\n      setExpenseEntries(newState);\n    }\n  }\n\n  return (\n    <>\n      <tr className=\"bg-yellow-200\">\n        <td className=\"border border-green-600\">\n          {sale && sale.date\n            ? format(new Date(sale.date), \"dd/MM/yyyy\")\n            : new Date().toLocaleDateString()}\n        </td>\n        {tabState.income ? (\n          <td className=\"border border-green-600\">{sale && sale.card_id}</td>\n        ) : (\n          <td className=\"border border-green-600\">\n            {sale && sale.description}\n          </td>\n        )}\n\n        <td className=\"border border-green-600\">{sale && sale.amount_paid}</td>\n        <td\n          className=\"border border-green-600\"\n          onClick={() => removeSalesEntryHandler(sale.id)}\n        >\n          <Icons type=\"delete\" />\n        </td>\n\n        {tabState.income ? (\n          <td\n            className=\"cursor-pointer border border-green-600\"\n            onClick={() => {\n              history.push(`/income/${sale.id}`);\n            }}\n          >\n            <Icons type=\"edit\" />\n          </td>\n        ) : (\n          <td\n            className=\"cursor-pointer border border-green-600\"\n            onClick={() => {\n              history.push(`/expense/${sale.id}`);\n            }}\n          >\n            <Icons type=\"edit\" />\n          </td>\n        )}\n      </tr>\n    </>\n  );\n};\n\nexport default Sale;\n","import Sale from \"./Sale\";\n\nconst SalesTable = ({\n  incomeEntries,\n  expenseEntries,\n  tabState,\n  setIncomeEntries,\n  setExpenseEntries,\n}) => {\n  return (\n    <>\n      <table className=\"w-full my-4 bg-green-200 border-collapse border-2 border-green-800\">\n        <thead>\n          {tabState.income ? (\n            <tr>\n              <th className=\"border border-green-600\">Date</th>\n              <th className=\"border border-green-600\">Card ID</th>\n              <th className=\"border border-green-600\">Amount</th>\n              <th className=\"border border-green-600\">Delete</th>\n              <th className=\"border border-green-600\">Edit</th>\n            </tr>\n          ) : (\n            <tr>\n              <th className=\"border border-green-600\">Date</th>\n              <th className=\"border border-green-600\">Description</th>\n              <th className=\"border border-green-600\">Amount</th>\n              <th className=\"border border-green-600\">Delete</th>\n              <th className=\"border border-green-600\">Edit</th>\n            </tr>\n          )}\n        </thead>\n        <tbody>\n          {tabState.income ? (\n            incomeEntries.length ? (\n              incomeEntries.map((sale) => (\n                <Sale\n                  sale={sale}\n                  key={sale.id}\n                  tabState={tabState}\n                  incomeEntries={incomeEntries}\n                  setIncomeEntries={setIncomeEntries}\n                  expenseEntries={expenseEntries}\n                  setExpenseEntries={setExpenseEntries}\n                />\n              ))\n            ) : (\n              <tr>\n                <td>No sales</td>\n              </tr>\n            )\n          ) : expenseEntries.length ? (\n            expenseEntries.map((sale) => (\n              <Sale\n                sale={sale}\n                key={sale.id}\n                tabState={tabState}\n                incomeEntries={incomeEntries}\n                setIncomeEntries={setIncomeEntries}\n                expenseEntries={expenseEntries}\n                setExpenseEntries={setExpenseEntries}\n              />\n            ))\n          ) : (\n            <tr>\n              <td>No sales</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default SalesTable;\n","import React from \"react\";\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"w-full max-w-screen-md mx-auto rounded-sm h-full text-center\">\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SalesTable from \"./Components/DisplaySales/SalesTable\";\n// import FilterByCardId from \"./Components/FilterSales/FilterByCardId\";\n// import FilterByDate from \"./Components/FilterSales/FilterByDate\";\n// import FilterByDateRange from \"./Components/FilterSales/FilterByDateRange\";\nimport Layout from \"./Layout\";\nimport { getAllExpensesEntries, getAllIncomeEntries } from \"./services/api\";\n// import { filterSales } from \"./services/api\";\n\nfunction App() {\n  const history = useHistory();\n  const [incomeEntries, setIncomeEntries] = useState([]);\n  const [expenseEntries, setExpenseEntries] = useState([]);\n  const [tabState, setTabState] = useState({\n    income: true,\n    expense: false,\n  });\n\n  useEffect(() => {\n    getAllIncomeEntries()\n      .then((res) => setIncomeEntries(res))\n      .catch((error) => console.log(\"From App.js METHOD = GET: \", error));\n    getAllExpensesEntries()\n      .then((res) => setExpenseEntries(res))\n      .catch((error) => console.log(\"From App.js METHOD = GET: \", error));\n  }, []);\n\n  // const [filterBy, setFilterBy] = useState(\"\");\n  // const [filterData, setFilterData] = useState([]);\n  // const [dateFilter, setDateFilter] = useState({\n  //   startDate: \"\",\n  //   endDate: \"\",\n  // });\n  // const salesRepId = 1;\n\n  // function handleFilterRequest(filterValue) {\n  //   if (typeof filterValue === \"object\") {\n  //     filterSales(filterValue)\n  //       .then((res) => setFilterData(res))\n  //       .catch((e) => console.log(\"Error e\", e));\n  //   } else {\n  //     filterSales(filterValue)\n  //       .then((res) => setFilterData(res))\n  //       .catch((e) => console.log(\"Error e\", e));\n  //   }\n  // }\n\n  // function handleFilterChange(e) {\n  //   if (e.target.value === \"date\" || e.target.value === \"card_id\") {\n  //     setFilterBy(e.target.value);\n  //     handleFilterRequest(e.target.value);\n  //   } else if (e.target.value === \"date_range\") {\n  //     setFilterBy(e.target.value);\n  //   } else if (e.target.value === \"Choose Filter\") {\n  //     setFilterBy(e.target.value);\n  //   }\n  // }\n\n  console.log(\"re-render\");\n  return (\n    <Layout>\n      <h1 className=\"font-sans text-2xl font-medium text-gray-500 text-center\">\n        Sales Summary\n      </h1>\n      <button\n        onClick={() => {\n          history.push(\"/login\");\n          localStorage.removeItem(\"jwt\");\n        }}\n        className=\"bg-red-200 text-red-600 font-semibold hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n      >\n        Logout\n      </button>\n      <div className=\"text-center my-5\">\n        <button\n          className=\"bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n          onClick={() => history.push(\"/income\")}\n        >\n          Add Income\n        </button>\n      </div>\n\n      <div className=\"text-center my-5\">\n        <button\n          className=\"bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n          onClick={() => history.push(\"/expense\")}\n        >\n          Add Expense\n        </button>\n      </div>\n\n      <div className=\"flex justify-around bg-gray-100 p-3 rounded-lg\">\n        <div\n          className={\n            tabState.income\n              ? \"cursor-pointer text-purple-500 font-medium px-4 py-2  bg-purple-200 rounded-lg\"\n              : \"cursor-pointer text-gray-400 font-medium px-4 py-2\"\n          }\n          onClick={() => setTabState({ expense: false, income: true })}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 inline mr-2 stroke-current text-green-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\n            />\n          </svg>{\" \"}\n          Income Table\n        </div>\n        <div\n          className={\n            tabState.expense\n              ? \"cursor-pointer text-purple-500 font-medium px-4 py-2 bg-purple-200 rounded-lg\"\n              : \"cursor-pointer text-gray-400 font-medium px-4 py-2\"\n          }\n          onClick={() => setTabState({ income: false, expense: true })}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 inline mr-2 stroke-current text-red-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\n            />\n          </svg>\n          Expense Table\n        </div>\n      </div>\n\n      <SalesTable\n        incomeEntries={incomeEntries}\n        expenseEntries={expenseEntries}\n        tabState={tabState}\n        setExpenseEntries={setExpenseEntries}\n        setIncomeEntries={setIncomeEntries}\n      />\n\n      {/* <button\n          onClick={getSalesEntriesHandler}\n          className=\"min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n        >\n          Get All Sales Summary\n          {cardId || date ? \"Get Sales Summary\" : \"Get All Sales Summary\"}\n        </button> */}\n\n      {/* <label className=\"block\">\n          <span className=\"block\">Filter Sales</span>\n          <select value={filterBy} onChange={handleFilterChange}>\n            <option value=\"Choose Filter\" name=\"Choose Filter\">\n              Choose Filter\n            </option>\n            <option value=\"date\">Filter by day</option>\n            <option value=\"card_id\">Filter by card ID</option>\n            <option value=\"date_range\">Filter by date range</option>\n          </select>\n        </label>\n        {filterBy === \"date_range\" ? (\n          <>\n            <label className=\"block\">Start Date</label>\n            <input\n              className=\"block mb-2\"\n              type=\"date\"\n              value={dateFilter.startDate}\n              name=\"startDate\"\n              onChange={(e) =>\n                setDateFilter({\n                  ...dateFilter,\n                  [e.target.name]: e.target.value,\n                })\n              }\n            />\n            <label className=\"block\">End Date</label>\n            <input\n              className=\"block mb-2\"\n              type=\"date\"\n              value={dateFilter.endDate}\n              name=\"endDate\"\n              onChange={(e) =>\n                setDateFilter({\n                  ...dateFilter,\n                  [e.target.name]: e.target.value,\n                })\n              }\n            />\n            <button\n              className=\"block p-2 bg-yellow-100 text-yellow-600  rounded-md px-2 py-1 shadow-2xl\"\n              onClick={() => {\n                if (Object.values(dateFilter).length === 2) {\n                  handleFilterRequest(dateFilter);\n                  setDateFilter({\n                    startDate: \"\",\n                    endDate: \"\",\n                  });\n                }\n              }}\n            >\n              Submit\n            </button>\n          </>\n        ) : null}\n\n        {filterBy === \"date\" ? <FilterByDate filterData={filterData} /> : null}\n        {filterBy === \"card_id\" ? (\n          <FilterByCardId filterData={filterData} />\n        ) : null}\n        {filterBy === \"date_range\" && Object.values(dateFilter).length === 2 ? (\n          <FilterByDateRange filterData={filterData} />\n        ) : null} */}\n    </Layout>\n  );\n}\n\nexport default App;\n","import { useForm, Controller, SubmitHandler } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Layout from \"../Layout\";\nimport { addExpenseEntry, addIncomeEntry } from \"../services/api\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { format } from \"date-fns\";\n\nconst AddSalesEntry = ({ type }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    control,\n    formState: { errors },\n  } = useForm({\n    mode: \"all\",\n  });\n\n  const salesRepId = 1;\n\n  const history = useHistory();\n  const saleDate = watch(\"saleDate\");\n  const onSubmit = (data) => {\n    const formattedDate = format(data.saleDate, \"yyyy-MM-dd\");\n    const formData = {\n      ...data,\n      date: formattedDate,\n    };\n\n    if (history.location.pathname === \"/expense\") {\n      const { amount_paid, date, description } = formData;\n\n      addExpenseEntry(salesRepId, amount_paid, date, description)\n        .then((res) => history.push(\"/\"))\n        .catch((error) => console.log(\"From App.js METHOD = POST\", error));\n\n      reset();\n    }\n    if (history.location.pathname === \"/income\") {\n      const { card_id, amount_paid, date } = formData;\n\n      addIncomeEntry(card_id, salesRepId, amount_paid, date)\n        .then((res) => history.push(\"/\"))\n        .catch((error) => console.log(\"From App.js METHOD = POST\", error));\n\n      reset();\n    }\n  };\n\n  return (\n    <Layout>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"inline-block text-left\"\n      >\n        {type === \"income\" && (\n          <>\n            <label className=\"block\">Card Number</label>\n            <input\n              className=\"shadow-xl  focus:outline-none focus:ring-2 focus:ring-purple-300\"\n              type=\"number\"\n              {...register(\"card_id\", {\n                required: \"This field is required!\",\n                valueAsNumber: true,\n                validate: {\n                  positiveNumber: (value) => parseFloat(value) > 0,\n                },\n              })}\n            />\n            {errors.card_id && errors.card_id.type === \"positiveNumber\" && (\n              <p style={{ color: \"red\" }}>Card ID is invalid</p>\n            )}\n\n            {errors.card_id && (\n              <p style={{ color: \"red\" }}>{errors.card_id.message}</p>\n            )}\n          </>\n        )}\n        <label className=\"block\">Date</label>\n        <Controller\n          name=\"saleDate\"\n          control={control}\n          required\n          defaultValue={new Date()}\n          render={({ field }) => (\n            <DatePicker\n              placeholderText=\"Enter sale date\"\n              onChange={(e) => field.onChange(e)}\n              selected={\n                saleDate?.value ? new Date(saleDate.value) : field.value\n              }\n              dateFormat=\"dd/MM/yyyy\"\n            />\n          )}\n        />\n        <label className=\"block\">Amount</label>\n        <input\n          className=\"block mb-2 shadow-xl focus:outline-none focus:ring-2 focus:ring-purple-300\"\n          type=\"number\"\n          {...register(\"amount_paid\", {\n            required: \"This field is required\",\n            valueAsNumber: true,\n            validate: {\n              positiveNumber: (value) => parseFloat(value) > 0,\n            },\n          })}\n        />\n        {errors.amount_paid && errors.amount_paid.type === \"positiveNumber\" && (\n          <p style={{ color: \"red\" }}>amount should be greater than 0</p>\n        )}\n\n        {errors.amount_paid && (\n          <p style={{ color: \"red\" }}>{errors.amount_paid.message}</p>\n        )}\n\n        {type === \"expense\" && (\n          <>\n            <label className=\"block\">Description</label>\n            <input\n              className=\"block mb-2 shadow-xl\"\n              {...register(\"description\", {\n                validate: (value) => value.trim().length > 0,\n              })}\n            />\n            {errors.description && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n          </>\n        )}\n        <input\n          type=\"submit\"\n          className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n        />\n        <input\n          type=\"button\"\n          value=\"Cancel\"\n          onClick={() => history.push(\"/\")}\n          className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n        />\n      </form>\n    </Layout>\n  );\n};\n\nexport default AddSalesEntry;\n","import { format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../Layout\";\nimport {\n  getAllExpensesEntries,\n  getAllIncomeEntries,\n  getExpenseById,\n  getIncomeById,\n  updateExpenseEntry,\n  updateIncomeEntry,\n} from \"../services/api\";\n\nconst EditSalesEntry = ({ type }) => {\n  const [incomeEntries, setIncomeEntries] = useState([]);\n  const [expenseEntries, setExpenseEntries] = useState([]);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  const date = watch(\"date\");\n\n  useEffect(() => {\n    if (type === \"income\") {\n      getIncomeById(id)\n        .then((res) => {\n          reset({\n            amount_paid: +res.amount_paid,\n            card_id: +res.card_id,\n            id: +res.id,\n            date: new Date(res.date),\n          });\n        })\n        .catch((error) =>\n          console.log(\"Error while getting income by id\", error)\n        );\n      getAllIncomeEntries()\n        .then((res) => setIncomeEntries(res))\n        .catch((error) =>\n          console.log(\"From EditSalesEntry METHOD = GET: \", error)\n        );\n    }\n    if (type === \"expense\") {\n      getExpenseById(id)\n        .then((res) => {\n          reset({\n            amount_paid: +res.amount_paid,\n            description: res.description,\n            id: +res.id,\n            date: new Date(res.date),\n          });\n        })\n        .catch((error) =>\n          console.log(\"Error while getting expense by id\", error)\n        );\n      getAllExpensesEntries()\n        .then((res) => setExpenseEntries(res))\n        .catch((error) =>\n          console.log(\"From EditSalesEntry METHOD = GET: \", error)\n        );\n    }\n  }, [reset]);\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const onSubmit = (data) => {\n    if (type === `income`) {\n      const body = {\n        ...data,\n        date: format(data.date, \"yyyy-MM-dd\"),\n      };\n\n      if (Boolean(Object.keys(body).length)) {\n        updateIncomeEntry(id, body)\n          .then((res) => {\n            history.push(\"/\");\n          })\n          .catch((error) => console.log(\"From App.js METHOD = PUT\", error));\n\n        reset();\n      } else {\n        alert(\"edit atleast one of the fields\");\n      }\n    }\n    if (type === `expense`) {\n      const body = {\n        ...data,\n        date: format(data.date, \"yyyy-MM-dd\"),\n      };\n\n      if (Boolean(Object.keys(body).length)) {\n        updateExpenseEntry(id, body)\n          .then((res) => {\n            history.push(\"/\");\n          })\n          .catch((error) => console.log(\"From App.js METHOD = PUT\", error));\n\n        reset();\n      } else {\n        alert(\"Edit atleast one the fields\");\n      }\n    }\n  };\n\n  return (\n    <Layout>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"inline-block text-left\"\n      >\n        {type === \"income\" && (\n          <>\n            <label className=\"block\">Card Number</label>\n            <input\n              className=\"shadow-xl  focus:outline-none focus:ring-2 focus:ring-purple-300\"\n              type=\"number\"\n              {...register(\"card_id\", {\n                required: \"This field is required!\",\n                valueAsNumber: true,\n                validate: {\n                  positiveNumber: (value) => parseFloat(value) > 0,\n                },\n              })}\n            />\n            {errors.card_id && errors.card_id.type === \"positiveNumber\" && (\n              <p style={{ color: \"red\" }}>Card ID is invalid</p>\n            )}\n\n            {errors.card_id && (\n              <p style={{ color: \"red\" }}>{errors.card_id.message}</p>\n            )}\n          </>\n        )}\n        <label className=\"block\">Date</label>\n\n        <Controller\n          name=\"date\"\n          control={control}\n          required\n          //   defaultValue={new Date(date)}\n          render={({ field }) => (\n            <DatePicker\n              placeholderText=\"Enter sale date\"\n              onChange={(e) => field.onChange(e)}\n              selected={date ? date : field.value}\n              dateFormat=\"dd/MM/yyyy\"\n            />\n          )}\n        />\n\n        <label className=\"block\">Amount</label>\n\n        <input\n          className=\"block mb-2 shadow-xl focus:outline-none focus:ring-2 focus:ring-purple-300\"\n          type=\"number\"\n          {...register(\"amount_paid\", {\n            required: \"This field is required\",\n            valueAsNumber: true,\n            validate: {\n              positiveNumber: (value) => parseFloat(value) > 0,\n            },\n          })}\n        />\n        {errors.amount_paid && errors.amount_paid.type === \"positiveNumber\" && (\n          <p style={{ color: \"red\" }}>amount should be greater than 0</p>\n        )}\n\n        {errors.amount_paid && (\n          <p style={{ color: \"red\" }}>{errors.amount_paid.message}</p>\n        )}\n\n        {type === \"expense\" && (\n          <>\n            <label className=\"block\">Description</label>\n            <input\n              className=\"block mb-2 shadow-xl\"\n              {...register(\"description\", {\n                validate: (value) => value.trim().length > 0,\n              })}\n            />\n            {errors.description && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n          </>\n        )}\n        <input\n          type=\"submit\"\n          className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n        />\n        <input\n          type=\"button\"\n          value=\"Cancel\"\n          onClick={() => history.push(\"/\")}\n          className=\"block my-2 min-w-full bg-purple-300 text-purple-600 font-normal hover:bg-purple-200 duration-100 hover:text-purple-800 rounded-md px-2 py-1 shadow-2xl\"\n        />\n      </form>\n    </Layout>\n  );\n};\n\nexport default EditSalesEntry;\n","import { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Layout from \"../Layout\";\nimport { login } from \"../services/api\";\n\nconst Login = () => {\n  // const location = useLocation();\n  // const history = useHistory();\n  // const { authLogin, loginData } = useContext(AuthContext);\n\n  // if (authLogin) {\n  //   const { from } = location.state || { from: { pathname: \"/\" } };\n  //   history.replace(from);\n  // }\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const history = useHistory();\n  const onSubmit = (data) => {\n    const newData = {\n      username: data.username.length && data.username.trim(),\n      password: data.password.length && data.password.trim(),\n    };\n\n    login(newData)\n      .then((res) => {\n        localStorage.setItem(\"jwt\", JSON.stringify(res.token));\n        history.push(\"/\");\n      })\n      .catch((e) => console.log(e));\n    reset();\n  };\n\n  if (Boolean(JSON.parse(localStorage.getItem(\"jwt\")) || \"\")) {\n    history.push(\"/\");\n  }\n\n  return (\n    <Layout>\n      <h1 className=\"text-lg my-8\">Login</h1>\n      <form\n        className=\"inline-block text-left\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <label className=\"block\">Username</label>\n        <input\n          className=\"shadow-xl  focus:outline-none focus:ring-2 focus:ring-purple-300\"\n          {...register(\"username\", {\n            required: \"This field is required!\",\n          })}\n        />\n        {errors.username && (\n          <p style={{ color: \"red\" }}>{errors.username.message}</p>\n        )}\n        <label className=\"block\">Password</label>\n        <input\n          className=\"shadow-xl  focus:outline-none focus:ring-2 focus:ring-purple-300\"\n          type=\"password\"\n          {...register(\"password\", {\n            required: \"This field is required!\",\n          })}\n        />\n        {errors.password && (\n          <p style={{ color: \"red\" }}>{errors.password.message}</p>\n        )}\n        <div></div>\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import Layout from \"../Layout\";\n\nconst SignUp = () => {\n  return (\n    <Layout>\n      <h1 className=\"text-lg my-8\">Sign Up</h1>\n      <form className=\"inline-block text-left\">\n        <label className=\"block\">Username</label>\n        <input className=\"shadow-xl  focus:outline-none focus:ring-2 focus:ring-purple-300\" />\n        <label className=\"block\">Password</label>\n        <input className=\"shadow-xl  focus:outline-none focus:ring-2 focus:ring-purple-300\" />\n        <div></div>\n        <input type=\"submit\" value=\"Sign Up\" />\n      </form>\n    </Layout>\n  );\n};\n\nexport default SignUp;\n","import { Redirect, Route } from \"react-router-dom\";\n\nfunction PrivateRoute({ children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return JSON.parse(localStorage.getItem(\"jwt\")) ? (\n          children\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport AddSalesEntry from \"./pages/AddSalesEntry\";\nimport EditSalesEntry from \"./pages/EditSalesEntry\";\nimport Login from \"./pages/Login\";\nimport SignUp from \"./pages/SignUp\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst Routes = () => {\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem(\"jwt\"))) {\n      console.log(\"logged in\");\n    }\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignUp />\n        </Route>\n\n        <PrivateRoute exact path=\"/\">\n          <App />\n        </PrivateRoute>\n        <PrivateRoute exact path=\"/income\">\n          <AddSalesEntry type=\"income\" />\n        </PrivateRoute>\n        <PrivateRoute path=\"/income/:id\" exact>\n          <EditSalesEntry type=\"income\" />\n        </PrivateRoute>\n        <PrivateRoute path=\"/expense\" exact>\n          <AddSalesEntry type=\"expense\" />\n        </PrivateRoute>\n        <PrivateRoute path=\"/expense/:id\" exact>\n          <EditSalesEntry type=\"expense\" />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./Route\";\n\n// import swDev from \"./swDev\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// swDev();\n"],"sourceRoot":""}